# Actions workflow

name: CI_PIPELINE

# Workflow Triggers
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Workflow Jobs
jobs:
  # Test and Build Job
  build:
    # Runner Image
    runs-on: ubuntu-latest
    steps:

      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Python Installation
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.5'
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Setup And Test
      - name: Setup And Test
        run: |
          sed -i "s/__version__\s*=\s*\"\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)\"/__version__ = \"\1.\2.$GITHUB_RUN_NUMBER\"/" veroku/__init__.py
          python -m unittest discover -s ./veroku/tests -t ./ -p 'test_*.py'

      # Package and Upload

      - name: Extract Branch Name
        run: echo "::set-env name=BRANCH::$(echo ${GITHUB_REF##*/})"
      # TODO: Add error handling for upload command (for instance for the case that this is run more than once with same package number)
      # TODO: move upload commands to script file and improve branch check
      - name: Package And Upload
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install twine
          pip install --upgrade setuptools wheel
          python setup.py sdist bdist_wheel
          echo "On branch $BRANCH"
          if [ $BRANCH == master ]; then python -m twine upload --verbose -u $PYPI_USERNAME -p $PYPI_PASSWORD --repository-url https://upload.pypi.org/legacy/ dist/*; fi

      # Create and Publish Documentation
      - run: |
          cd ./docs
          sphinx-apidoc -f -e -o source/ ../veroku/ ../veroku/tests/
          make html
          cd ../
          cp -R docs ../docs_copy

      - name: Checkout Github Pages Branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
      # TODO: Add proper checks and replace '|| :'s
      - run: |
          rm -rf docs || :
          mv ../docs_copy/build/html docs
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docs/ || :
          git commit -m 'Update documentation.' || :
          git push || :


